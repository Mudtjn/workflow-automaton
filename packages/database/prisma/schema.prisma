// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
  zaps Zap[]
}

model Zap {
  id      String @id @default(uuid())
  // triggerId String
  userId  String
  user    User @relation(fields: [userId], references: [id])
  trigger Trigger?
  actions Action[]
  zapRuns  ZapRun[]
}

model Trigger {
  id        String @id @default(uuid())
  zapId     String @unique
  triggerId String 
  metadata  Json @default("{}")
  type      AvailableTriggers @relation(fields:[triggerId], references:[id])
  zap       Zap @relation(fields: [zapId], references: [id])
}
model AvailableTriggers {
  id       String @id @default(uuid())
  name     String
  image    String
  triggers Trigger[]
}

model Action{
  id       String @id @default(uuid())
  actionId String  
  action   AvailableActions @relation(fields: [actionId], references: [id])
  metadata Json @default("{}")
  zapId     String
  zap       Zap @relation(fields: [zapId], references: [id])
  sortingOrder Int @default(0)
}

model AvailableActions {
  id       String @id @default(uuid())
  name     String
  image    String
  actions Action[]  
}

model ZapRun {
  id           String @id @default(uuid())
  metadata     Json
  zapId        String
  zap          Zap @relation(fields: [zapId], references: [id])
  zapRunOutbox ZapRunOutbox?
}

model ZapRunOutbox {
  id String @id @default(uuid())
  zapRunId String @unique
  userId String
  zapRun ZapRun @relation(fields:[zapRunId], references: [id])
}